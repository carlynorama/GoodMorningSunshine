// 
// generated by 'convert_script_to_sketch.py goodmorning_get.py'
// 
#define goodmorning_get_path"/tmp/goodmorning_get.py"
// executes the script
void runScript_goodmorning_get() {  
  Process p;  
  p.begin( goodmorning_get_path ); 
  p.run(); 
} 
// checks if script is present
boolean checkScriptExists_goodmorning_get() {  
  return FileSystem.exists( goodmorning_get_path); 
}
// upload the script 
void uploadScript_goodmorning_get() { 
  File f = FileSystem.open( goodmorning_get_path, FILE_WRITE); 
  f.print(F( "#!/usr/bin/env python\n" ));
  f.print(F( "# goodmorning_get.py\n" ));
  f.print(F( "import os,sys\n" ));
  f.print(F( "# add your curl url here, can be ftp, http (if server supports PUT), etc.\n" ));
  f.print(F( "# ftp format:   'ftp://username:password@hostname/dirpath'\n" ));
  f.print(F( "#ftp_base_url = 'ftp://crashjook:xYSMAE4w@crash.jook.com/goodmorning'\n" ));
  f.print(F( "ftp_base_url = 'ftp://jooktest:Mk9MZu6G@test.jook.com/goodmorning'\n" ));
  f.print(F( "\n" ));
  f.print(F( "if len(sys.argv) != 2 :\n" ));
  f.print(F( "    print 'usage: goodmorning_get.py <filename>'\n" ));
  f.print(F( "    sys.exit(1)\n" ));
  f.print(F( "\n" ));
  f.print(F( "file_new = sys.argv[1]\n" ));
  f.print(F( "file_old = file_new + '.old'\n" ));
  f.print(F( "ftp_url  = ftp_base_url + '/' + file_new\n" ));
  f.print(F( "ftp_get_cmd = 'curl --silent -R -O ' + ftp_url\n" ));
  f.print(F( "\n" ));
  f.print(F( "# fetch the file from the remote server\n" ));
  f.print(F( "rc = os.system( ftp_get_cmd )\n" ));
  f.print(F( "if rc :\n" ));
  f.print(F( "    print 'bad ftp rc:'+ str(rc)\n" ));
  f.print(F( "    sys.exit(rc)\n" ));
  f.print(F( "\n" ));
  f.print(F( "    file_old_time = 0\n" ));
  f.print(F( "file_new_time = 0\n" ));
  f.print(F( "\n" ));
  f.print(F( "if not os.path.isfile( file_old ):\n" ));
  f.print(F( "    file_old_time = os.path.getmtime( file_old )\n" ));
  f.print(F( "\n" ));
  f.print(F( "if os.path.isfile( file_new ):\n" ));
  f.print(F( "    file_new_time = os.path.getmtime( file_new )\n" ));
  f.print(F( "    time_diff = file_new_time - file_old_time\n" ));
  f.print(F( "    print 'time diff mins: '+ str(int(time_diff/60))\n" ));
  f.print(F( "    os.rename( file_new, file_old )\n" ));
  f.print(F( "else:\n" ));
  f.print(F( "    print 'bad files'\n" ));
  f.print(F( "\n" ));
  f.close(); 
  // make executable 
  Process chmod; 
  chmod.runShellCommand("chmod +x /tmp/goodmorning_get.py");
} 
