// 
// generated by 'convert_script_to_sketch.py goodmorning.py'
// 
// full path where script lives 
#define goodmorning_path  "/tmp/goodmorning.py"

// executes the script, return string emitted
String runScript_goodmorning(char* arg1, char* arg2) { 
  Process p;  
  p.begin( goodmorning_path ); 
  if(arg1) p.addParameter( arg1 ); 
  if(arg2) p.addParameter( arg2 ); 
  p.run(); 
  String str; 
  while( p.available() > 0 ) { 
     str += p.readString(); 
  } 
  return str; 
} 
// checks if script is present
boolean checkScriptExists_goodmorning() {  
  return FileSystem.exists( goodmorning_path); 
}
// write the script to the Yun 
void writeScript_goodmorning() { 
  File f = FileSystem.open( goodmorning_path, FILE_WRITE); 
  f.print(F( "#!/usr/bin/python\n" ));
  f.print(F( "# goodmorning.py\n" ));
  f.print(F( "import os,sys\n" ));
  f.print(F( "# add your curl url here, can be ftp, http (if server supports PUT), etc.\n" ));
  f.print(F( "# ftp format:   'ftp://username:password@hostname/dirpath'\n" ));
  f.print(F( "base_url = 'ftp://jooktest:Mk9MZu6G@test.jook.com/goodmorning'\n" ));
  f.print(F( "base_dir = \"/tmp/\";\n" ));
  f.print(F( "\n" ));
  f.print(F( "if len(sys.argv) != 3 :\n" ));
  f.print(F( "    print 'usage: goodmorning.py <get|set> <filename>'\n" ));
  f.print(F( "    sys.exit(1)\n" ));
  f.print(F( "cmd      = sys.argv[1]\n" ));
  f.print(F( "fname    = sys.argv[2]\n" ));
  f.print(F( "file_new = base_dir + fname\n" ));
  f.print(F( "file_old = base_dir + fname + '.old'\n" ));
  f.print(F( "full_url = base_url + '/' + fname\n" ));
  f.print(F( "curl_get_cmd = 'curl --silent -R -o '+ file_new +' '+ full_url\n" ));
  f.print(F( "curl_set_cmd = 'curl --silent --ftp-create-dirs --upload-file '+file_new+' '+full_url\n" ));
  f.print(F( "\n" ));
  f.print(F( "def goodmorning_set():\n" ));
  f.print(F( "    # send file to remote server (file contents unimportant, timestamp is)\n" ));
  f.print(F( "    rc = os.system( 'echo \"hello!\" > '+file_new )\n" ));
  f.print(F( "    rc = os.system( curl_set_cmd )\n" ));
  f.print(F( "\n" ));
  f.print(F( "def goodmorning_get():\n" ));
  f.print(F( "    # fetch the file from the remote server\n" ));
  f.print(F( "    rc = os.system( curl_get_cmd )\n" ));
  f.print(F( "    if rc :\n" ));
  f.print(F( "        print '-' + str(rc)  # return bad news as neg number\n" ));
  f.print(F( "        sys.exit(rc)\n" ));
  f.print(F( "    file_old_time = 0\n" ));
  f.print(F( "    file_new_time = 0\n" ));
  f.print(F( "\n" ));
  f.print(F( "    if os.path.isfile( file_old ):\n" ));
  f.print(F( "        file_old_time = os.path.getmtime( file_old )\n" ));
  f.print(F( "\n" ));
  f.print(F( "    # compute timestamp differences\n" ));
  f.print(F( "    if os.path.isfile( file_new ):\n" ));
  f.print(F( "        file_new_time = os.path.getmtime( file_new )\n" ));
  f.print(F( "        time_diff = file_new_time - file_old_time\n" ));
  f.print(F( "        diffsecs = min(65000, int(time_diff))\n" ));
  f.print(F( "        #print 'time diff mins: '+ str(diffmins)\n" ));
  f.print(F( "        print str(diffsecs)\n" ));
  f.print(F( "        os.rename( file_new, file_old )\n" ));
  f.print(F( "    else:\n" ));
  f.print(F( "        print \"-1000\"  # 'bad files'\n" ));
  f.print(F( "        sys.exit(1)\n" ));
  f.print(F( "\n" ));
  f.print(F( "if cmd == 'set' :\n" ));
  f.print(F( "    #print \"setting \"+file_new\n" ));
  f.print(F( "    goodmorning_set()\n" ));
  f.print(F( "\n" ));
  f.print(F( "elif cmd == 'get' :\n" ));
  f.print(F( "    #print \"getting \"+file_new\n" ));
  f.print(F( "    goodmorning_get()\n" ));
  f.print(F( "else :\n" ));
  f.print(F( "    print \"unrecognized cmd\"\n" ));
  f.print(F( "    sys.exit(1)\n" ));
  f.print(F( "\n" ));
  f.close(); 
  // make executable 
  Process chmod; 
  chmod.runShellCommand("chmod +x /tmp/goodmorning.py");
} 
